/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PreviewPanel.java
 *
 * Created on Mar 6, 2014, 4:00:45 PM
 */
package gui;

import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.sql.SQLException;
import java.util.logging.Logger;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;

import main.AnalysisParams;
import main.DebugToolbox;
import db.DbManager;
import db.PathwayImpl;

/**
 * 
 * @author ufuk
 */
public class PreviewPanel extends javax.swing.JPanel {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1870094570928464728L;

	public static Logger logger = Logger.getLogger(PathwayImpl.class.getName());

	/** Creates new form PreviewPanel */
	public PreviewPanel(InternalAnalysisFrame f) {
		this.frame = f;
		initComponents();
	}

	public void setParamButtonAction(ActionListener a) {
		paramButton.addActionListener(a);
	}

	public void setValueTypeComboAction(ActionListener a) {
		valueTypeComboBox.addActionListener(a);
	}

	public void setSepCharComboAction(ActionListener a) {
		sepCharComboBox.addActionListener(a);
	}

	public int getValueTypeComboIndex() {
		return valueTypeComboBox.getSelectedIndex();
	}

	public int getSepCharComboIndex() {
		return sepCharComboBox.getSelectedIndex();
	}

	public DbManager getDBManager() {
		return dbman;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        descriptionLabel = new javax.swing.JLabel();
        helpButton = new javax.swing.JButton();
        paramButton = new javax.swing.JButton();
        valueTypeComboBox = new javax.swing.JComboBox(AnalysisParams.RVAL_TYPE.values());
        scaleLabel = new javax.swing.JLabel();
        sepcharLabel = new javax.swing.JLabel();
        sepCharComboBox = new javax.swing.JComboBox(AnalysisParams.SEPCHAR.values());
        dbButton = new javax.swing.JButton();

        descriptionLabel.setText("<html>Below is a preview of the data in the selected input file <p> <p>Please <b>annotate</b> the columns accordingly, <b>select</b> the scale (raw/log) of the quantification values using the drop-down menu and <b>revise</b> parameters (if needed) before clicking the Analyze! button.");
        descriptionLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        helpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/info.png"))); // NOI18N
        helpButton.setToolTipText("Need help? ");
        helpButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 2, 2, 2));
        helpButton.setBorderPainted(false);
        helpButton.setContentAreaFilled(false);
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        paramButton.setText("Parameters");

        scaleLabel.setText("Scale:");

        sepcharLabel.setText("Prot ID. separation:");

        dbButton.setText("Select DB");
        dbButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dbButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(descriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(helpButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(paramButton)
                        .addGap(33, 33, 33)
                        .addComponent(dbButton)
                        .addGap(58, 58, 58)
                        .addComponent(sepcharLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sepCharComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(scaleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(valueTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(helpButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paramButton)
                    .addComponent(dbButton)
                    .addComponent(sepCharComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sepcharLabel)
                    .addComponent(scaleLabel)
                    .addComponent(valueTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        FeverGuide.showPreviewHelp();
    }//GEN-LAST:event_helpButtonActionPerformed

	private void dbButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_dbButtonActionPerformed

		if (dbman != null){
			String dbname = dbman.getDBName();
			int n = JOptionPane.showConfirmDialog(null,
					"A database '" + dbname  +"' is already loaded.\n "
					+ "Do you wish to close this database and load a new one?",
				    "Please confirm",
				    JOptionPane.YES_NO_OPTION,
				    JOptionPane.WARNING_MESSAGE);
			
			if (n == JOptionPane.NO_OPTION)
				return;
			else 
				dbman = null;
			
		}
		
		final DbSelectionDialog dialog = new DbSelectionDialog(new JFrame(),
				true);
		
		
		dialog.addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosed(WindowEvent e) {
				final File dbFile = dialog.getFile();
				if (dbFile == null)
					System.exit(FeverMainFrame.exitCodes.get(PreviewPanel.class));
				
				frame.activateDisGlass("Loading DB, please wait...");
				(new SwingWorker<Void, Void>() {
					@Override
					protected Void doInBackground() throws Exception {
						try {
							dbman = new DbManager(dbFile);
						} catch (SQLException e1) {
							logger.severe("Unable to load the chosen database, see details below:" 
									+ System.lineSeparator() 
									+ DebugToolbox.getStackTraceAsString(e1));
							System.exit(FeverMainFrame.exitCodes.get(this.getClass()));
						}
						return null;
					}
					
					@Override
					protected void done(){
						try{
							get();
						}catch(Exception e){
							e.printStackTrace();
						}
						
						frame.deactivateDisGlass();
					}
				}).execute();
			}
		});
		dialog.setLocationRelativeTo(null);
		dialog.setVisible(true);

	}// GEN-LAST:event_dbButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dbButton;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JButton helpButton;
    private javax.swing.JButton paramButton;
    private javax.swing.JLabel scaleLabel;
    private javax.swing.JComboBox sepCharComboBox;
    private javax.swing.JLabel sepcharLabel;
    private javax.swing.JComboBox valueTypeComboBox;
    // End of variables declaration//GEN-END:variables

	private DbManager dbman;
	private InternalAnalysisFrame frame;

}
